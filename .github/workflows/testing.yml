# GHA workflow for running tests.
#
# Largely taken from
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# Please check the link for more detailed instructions

name: Run tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        id: setup_python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache virtual environment
        id: cache_venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-${{ hashFiles('**/pyproject.toml') }}

      - name: Cache test data
        id: cache_test_data
        uses: actions/cache@v3
        with:
          path: tests/data
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-${{ hashFiles('**/tests/scripts/fetch_test_data.sh') }}

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install .
          pip install .[dev]
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
          
      - name: Get test data from OSF
        # if: steps.cache_test_data.outputs.cache-hit != 'true'
        run: |
          python -c "print steps.cache_test_data.outputs.cache-hit"
          sh tests/scripts/fetch_test_data.sh
          
      - name: Test with pytest
        run: |
          pytest tests/test_map_to_map.py
          pytest tests/test_distribution_to_distribution.py
